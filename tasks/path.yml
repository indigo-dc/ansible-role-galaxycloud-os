---
# Create directories

#______________________________________
# Common path configuration
#
# Mountpoint: /export
# Tool dependency dir: /export/tool_deps
# Conda dir: /export/_conda
# Job working dir: /export/job_work_dir
# Galaxy database dir (galaxy_db_dir): /export/galaxy/database
# Galaxy log: /var/log/galaxy
# Galxy custom configuration path: /etc/galaxy
 
- name: Create directories
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ galaxy_user }}'
    group: '{{ galaxy_user }}'
  with_items:
    - '{{ export_dir }}'
    - '{{ tool_deps_path }}'
    - '{{ galaxy_log_path }}'
    - '{{ galaxy_custom_config_path }}'
    - '{{ custom_utils_path }}'
  become_user: root
  become_method: sudo

#______________________________________
# Onedata path configuration
#
# Space mountpoint: /onedata
# Userdata dir: /onedata/<onedata_space_name>
# Galaxy database dir (galaxy_db_dir): /onedata/<onedata_space_name>/database
# External volume mountpoint: /export
# Job working dir: /export/job_work
# Tool dependency dir: /export/tool_deps
# Conda dir: /export/_conda
# nginx_upload_store_path: /export/tmp/nginx_upload_store_path nginx can't access to <onedata_space_name>/database/tmp/nginx_upload_store_path due to onedata permissions management

- set_fact:
    galaxy_db_dir: '{{ onedata_dir }}/{{ userdata_space }}/database'
    #job_work_dir: '{{ export_dir }}/job_work'
    nginx_upload_store_path: '{{ export_dir }}/tmp/nginx_upload_store'
  when: galaxy_lrms == "local" and os_storage == 'onedata'

- name: Create directories
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ galaxy_user }}'
    group: '{{ galaxy_user }}'
  with_items:
    - '{{ onedata_dir }}'
    - '{{ nginx_upload_store_path }}'
  become_user: root
  become_method: sudo
  when: os_storage == 'onedata'
