---
# Recipe to encrypt external volume

#______________________________________
# CentOS 7

- name: '[EL] Install packages'
  yum:
    name: '{{ packages }}'
    state: present
  vars:
    packages:
    - cryptsetup-luks
    - pv
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat"

#______________________________________
# Ubuntu

- name: '[Ubuntu] Install packages'
  apt:
    name: '{{ packages }}'
    state: present
  vars:
    packages:
    - cryptsetup
    - pv
  become_user: root
  become_method: sudo
  when: ansible_os_family == "Debian"

#______________________________________
# LUKSformat volume

- name: Clone fast_luks script
  git:
    repo: 'https://github.com/Laniakea-elixir-it/fast-luks.git'
    dest: '{{ custom_utils_path }}/fast-luks'
    version: 'vault'

# check if /export is mountpoint before LUKS encryption
- include: check_mountpoint_in.yml

- name: "Encrypt storage"
  command: "{{ custom_utils_path }}/fast-luks/fast_luks.sh -n -r 100 -v {{ vault_url }} -w {{ vault_wrapping_token }} -s {{ vault_secret_path }} --key {{ vault_secret_key }} --foreground"
  when: not paranoid_mode|bool
  become_user: root
  become_method: sudo

- name: "Encrypt and wipe storage"
  command: "{{ custom_utils_path }}/fast-luks/fast_luks.sh -n -r 100 -v {{ vault_url }} -w {{ vault_wrapping_token }} -s {{ vault_secret_path }} --key {{ vault_secret_key }} --foreground --paranoid-mode"
  when: paranoid_mode|bool
  become_user: root
  become_method: sudo

- name: 'Wait for LUKS success file: {{ luks_success_file }}'
  wait_for:
    path: '{{ luks_success_file }}' # FIXED in fast-luks script
    timeout: '{{ wait_timeout }}'
    search_regex: "LUKS encryption completed."

- name: 'Wait for volume setup success file: {{ volume_setup_success_file }}'
  wait_for:
    path: '{{ volume_setup_success_file }}' # FIXED in fast-luks script
    timeout: '{{ wait_timeout }}'
    search_regex: "Volume setup completed."

- name: 'Check {{ luks_config_file }}. If not present something went wrong'
  wait_for:
    path: '{{ luks_config_file }}'
    state: present

# After LUKS procedure, we need to set export_dir permissions and recreate tool_deps directory, since it has been deleted.
- name: 'Set {{ export_dir }} permissions and recreate {{ tool_deps_path }} directory'
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ galaxy_user }}'
    group: '{{ galaxy_user }}'
  with_items:
    - '{{ export_dir }}'
    - '{{ tool_deps_path }}'
  become_user: root
  become_method: sudo

# check if {{ export_dir }} is a mountpoint after LUKS encryption
- include: check_mountpoint_out.yml

- name: "Remove {{ export_dir }} with old device from fstab"
  lineinfile:
    dest: /etc/fstab
    regexp: '{{ export_dir }}'
    state: absent
    backup: yes
  become_user: root
  become_method: sudo
