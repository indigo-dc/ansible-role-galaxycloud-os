---
# Recipe to encrypt external volume

#______________________________________
# CentOS 7

- name: '[EL] Install packages'
  yum:
    name: '{{ item }}'
    state: present
  with_items:
    - cryptsetup-luks
    - pv
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat"

#______________________________________
# Ubuntu

- name: '[Ubuntu] Install packages'
  apt:
    name: '{{ item }}'
    state: present
  with_items:
    - cryptsetup
  become_user: root
  become_method: sudo
  when: ansible_os_family == "Debian"

#______________________________________
# LUKSformat volume

- name: Copy fast_luks scripts
  template:
    src: '{{ item.script }}'
    dest: '{{ item.destination }}'
    mode: a+x
  with_items:
    - { script: 'fast_luks.j2', destination: '{{ galaxy_custom_script_path }}/fast-luks', mode: 'a+x' }
    - { script: 'kickout.j2', destination: '{{ galaxy_custom_script_path }}/kickout', mode: 'a+x' }
  become_user: root
  become_method: sudo

- name: Add luks scripts
  lineinfile:
    dest: '{{ item.dest }}'
    line: '{{ item.command }}'
    state: present
  with_items:
    - { dest: '/home/{{ galaxy_user }}/.bashrc', command: 'sudo {{ galaxy_custom_script_path }}/fast-luks' }
    - { dest: '/home/{{ galaxy_user }}/.bashrc', command: 'source {{ galaxy_custom_script_path }}/kickout' }
  when: not paranoic_mode|bool

- name: Add luks scripts
  lineinfile:
    dest: '{{ item.dest }}'
    line: '{{ item.command }}'
    state: present
  with_items:
    - { dest: '/home/{{ galaxy_user }}/.bashrc', command: 'sudo {{ galaxy_custom_script_path }}/fast-luks --paranoic-mode' }
    - { dest: '/home/{{ galaxy_user }}/.bashrc', command: 'source {{ galaxy_custom_script_path }}/kickout' }
  when: paranoic_mode|bool

# check if /export is mountpoint before LUKS encryption
- include: check_mountpoint.yml

# send a mail to the administrator: Notification simulation
- include: sendmail.yml

- name: Wait for fast-luks start (pidfile creation)
  wait_for:
    path: /var/run/fast_luks/fast-luks.pid
    timeout: '{{ wait_timeout }}'

- name: Wait for fast-luks finish (pidfile deletion)
  wait_for:
    path: /var/run/fast_luks/fast-luks.pid
    state: absent
    timeout: '{{ wait_timeout }}'

- name: 'Wait for {{ luks_success_file }} file'
  wait_for:
    path: '{{ luks_success_file }}' # FIXED in fast-luks script
    timeout: '{{ wait_timeout }}'
    search_regex: "LUKS encryption completed."

- name: 'Check {{ luks_config_file }}. If not present something went wrong'
  wait_for:
    path: '{{ luks_config_file }}'
    state: present

# After LUKS procedure, we need to set export_dir permissions and recreate tool_deps directory, since it has been deleted.
- name: 'Set {{ export_dir }} permissions and recreate {{ tool_deps_path }} directory'
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ galaxy_user }}'
    group: '{{ galaxy_user }}'
  with_items:
    - '{{ export_dir }}'
    - '{{ tool_deps_path }}'
  become_user: root
  become_method: sudo

# check if {{ export_dir }} is a mountpoint after LUKS encryption
- include: check_mountpoint.yml

- name: Remove fast_luks scripts automatism from bashrc
  lineinfile:
    dest: '{{ item.dest }}'
    line: '{{ item.command }}'
    state: absent
  with_items:
    - { dest: '/home/{{ galaxy_user }}/.bashrc', command: 'sudo {{ galaxy_custom_script_path }}/fast-luks' }
    - { dest: '/home/{{ galaxy_user }}/.bashrc', command: 'source {{ galaxy_custom_script_path }}/kickout' }
